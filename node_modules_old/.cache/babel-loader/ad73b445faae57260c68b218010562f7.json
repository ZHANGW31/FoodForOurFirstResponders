{"ast":null,"code":"import _classCallCheck from \"C:\\\\source\\\\repos\\\\FoodForFirstResponders\\\\foodforfirstresponders\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\source\\\\repos\\\\FoodForFirstResponders\\\\foodforfirstresponders\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _createSuper from \"C:\\\\source\\\\repos\\\\FoodForFirstResponders\\\\foodforfirstresponders\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nimport _inherits from \"C:\\\\source\\\\repos\\\\FoodForFirstResponders\\\\foodforfirstresponders\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\source\\\\repos\\\\FoodForFirstResponders\\\\foodforfirstresponders\\\\src\\\\Components\\\\Paypal\\\\Paypal.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport scriptLoader from 'react-async-script-loader';\n\nvar PaypalButton = /*#__PURE__*/function (_React$Component) {\n  _inherits(PaypalButton, _React$Component);\n\n  var _super = _createSuper(PaypalButton);\n\n  function PaypalButton(props) {\n    var _this;\n\n    _classCallCheck(this, PaypalButton);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      showButton: false\n    };\n    window.React = React;\n    window.ReactDOM = ReactDOM;\n    return _this;\n  }\n\n  _createClass(PaypalButton, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n          isScriptLoaded = _this$props.isScriptLoaded,\n          isScriptLoadSucceed = _this$props.isScriptLoadSucceed;\n\n      if (isScriptLoaded && isScriptLoadSucceed) {\n        this.setState({\n          showButton: true\n        });\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var isScriptLoaded = nextProps.isScriptLoaded,\n          isScriptLoadSucceed = nextProps.isScriptLoadSucceed;\n      var isLoadedButWasntLoadedBefore = !this.state.showButton && !this.props.isScriptLoaded && isScriptLoaded;\n\n      if (isLoadedButWasntLoadedBefore) {\n        if (isScriptLoadSucceed) {\n          this.setState({\n            showButton: true\n          });\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          total = _this$props2.total,\n          currency = _this$props2.currency,\n          env = _this$props2.env,\n          commit = _this$props2.commit,\n          client = _this$props2.client,\n          onSuccess = _this$props2.onSuccess,\n          onError = _this$props2.onError,\n          onCancel = _this$props2.onCancel;\n      var showButton = this.state.showButton;\n\n      var payment = function payment() {\n        return paypal.rest.payment.create(env, client, {\n          transactions: [{\n            amount: {\n              total: total,\n              currency: currency\n            }\n          }]\n        });\n      };\n\n      var onAuthorize = function onAuthorize(data, actions) {\n        return actions.payment.execute().then(function () {\n          var payment = {\n            paid: true,\n            cancelled: false,\n            payerID: data.payerID,\n            paymentID: data.paymentID,\n            paymentToken: data.paymentToken,\n            returnUrl: data.returnUrl\n          };\n          onSuccess(payment);\n        });\n      };\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }\n      }, showButton && /*#__PURE__*/React.createElement(paypal.Button.react, {\n        env: env,\n        client: client,\n        commit: commit,\n        payment: payment,\n        onAuthorize: onAuthorize,\n        onCancel: onCancel,\n        onError: onError,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 24\n        }\n      }));\n    }\n  }]);\n\n  return PaypalButton;\n}(React.Component);\n\nexport default scriptLoader('https://www.paypalobjects.com/api/checkout.js')(PaypalButton);","map":{"version":3,"sources":["C:/source/repos/FoodForFirstResponders/foodforfirstresponders/src/Components/Paypal/Paypal.js"],"names":["React","ReactDOM","scriptLoader","PaypalButton","props","state","showButton","window","isScriptLoaded","isScriptLoadSucceed","setState","nextProps","isLoadedButWasntLoadedBefore","total","currency","env","commit","client","onSuccess","onError","onCancel","payment","paypal","rest","create","transactions","amount","onAuthorize","data","actions","execute","then","paid","cancelled","payerID","paymentID","paymentToken","returnUrl","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport scriptLoader from 'react-async-script-loader';\r\n\r\nclass PaypalButton extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        showButton: false,\r\n      };\r\n      window.React = React;\r\n      window.ReactDOM = ReactDOM;\r\n    }\r\n    componentDidMount() {\r\n        const {\r\n          isScriptLoaded,\r\n          isScriptLoadSucceed\r\n        } = this.props;\r\n        if (isScriptLoaded && isScriptLoadSucceed) {\r\n          this.setState({ showButton: true });\r\n        }\r\n      }\r\n      componentWillReceiveProps(nextProps) {\r\n        const {\r\n          isScriptLoaded,\r\n          isScriptLoadSucceed,\r\n        } = nextProps;\r\n        const isLoadedButWasntLoadedBefore =\r\n          !this.state.showButton &&\r\n          !this.props.isScriptLoaded &&\r\n          isScriptLoaded;\r\n        if (isLoadedButWasntLoadedBefore) {\r\n          if (isScriptLoadSucceed) {\r\n            this.setState({ showButton: true });\r\n          }\r\n        }\r\n      }\r\n    render() {\r\n    const {\r\n        total,\r\n        currency,\r\n        env,\r\n        commit,\r\n        client,\r\n        onSuccess,\r\n        onError,\r\n        onCancel,\r\n    } = this.props;\r\n    const {\r\n        showButton,\r\n    } = this.state;\r\n    const payment = () =>\r\n      paypal.rest.payment.create(env, client, {\r\n        transactions: [\r\n          {\r\n            amount: {\r\n              total,\r\n              currency,\r\n            }\r\n          },\r\n        ],\r\n      });\r\n    const onAuthorize = (data, actions) =>\r\n      actions.payment.execute()\r\n        .then(() => {\r\n          const payment = {\r\n            paid: true,\r\n            cancelled: false,\r\n            payerID: data.payerID,\r\n            paymentID: data.paymentID,\r\n            paymentToken: data.paymentToken,\r\n            returnUrl: data.returnUrl,\r\n          };\r\n          onSuccess(payment);\r\n        });\r\n    return (\r\n        <div>\r\n        {showButton && <paypal.Button.react\r\n            env={env}\r\n            client={client}\r\n            commit={commit}\r\n            payment={payment}\r\n            onAuthorize={onAuthorize}\r\n            onCancel={onCancel}\r\n            onError={onError}\r\n        />}\r\n        </div>\r\n    );\r\n    }\r\n  }\r\n  export default scriptLoader('https://www.paypalobjects.com/api/checkout.js')(PaypalButton);"]},"metadata":{},"sourceType":"module"}