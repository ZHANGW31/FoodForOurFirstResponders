{"ast":null,"code":"// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import scriptLoader from 'react-async-script-loader';\n// class PaypalButton extends React.Component {\n//     constructor(props) {\n//       super(props);\n//       this.state = {\n//         showButton: false,\n//       };\n//       window.React = React;\n//       window.ReactDOM = ReactDOM;\n//     }\n//     componentDidMount() {\n//         const {\n//           isScriptLoaded,\n//           isScriptLoadSucceed\n//         } = this.props;\n//         if (isScriptLoaded && isScriptLoadSucceed) {\n//           this.setState({ showButton: true });\n//         }\n//       }\n//       componentWillReceiveProps(nextProps) {\n//         const {\n//           isScriptLoaded,\n//           isScriptLoadSucceed,\n//         } = nextProps;\n//         const isLoadedButWasntLoadedBefore =\n//           !this.state.showButton &&\n//           !this.props.isScriptLoaded &&\n//           isScriptLoaded;\n//         if (isLoadedButWasntLoadedBefore) {\n//           if (isScriptLoadSucceed) {\n//             this.setState({ showButton: true });\n//           }\n//         }\n//       }\n//     render() {\n//     const {\n//         total,\n//         currency,\n//         env,\n//         commit,\n//         client,\n//         onSuccess,\n//         onError,\n//         onCancel,\n//     } = this.props;\n//     const {\n//         showButton,\n//     } = this.state;\n//     const payment = () =>\n//       paypal.rest.payment.create(env, client, {\n//         transactions: [\n//           {\n//             amount: {\n//               total,\n//               currency,\n//             }\n//           },\n//         ],\n//       });\n//     const onAuthorize = (data, actions) =>\n//       actions.payment.execute()\n//         .then(() => {\n//           const payment = {\n//             paid: true,\n//             cancelled: false,\n//             payerID: data.payerID,\n//             paymentID: data.paymentID,\n//             paymentToken: data.paymentToken,\n//             returnUrl: data.returnUrl,\n//           };\n//           onSuccess(payment);\n//         });\n//     return (\n//         <div>\n//         {showButton && <PaypalButton.react\n//             env={env}\n//             client={client}\n//             commit={commit}\n//             payment={payment}\n//             onAuthorize={onAuthorize}\n//             onCancel={onCancel}\n//             onError={onError}\n//         />}\n//         </div>\n//     );\n//     }\n//   }\n//   export default scriptLoader('https://www.paypalobjects.com/api/checkout.js')(PaypalButton);","map":{"version":3,"sources":["C:/source/repos/FoodForFirstResponders/foodforfirstresponders/src/Components/Paypal/Paypal.js"],"names":[],"mappings":"AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import React from 'react';\r\n// import ReactDOM from 'react-dom';\r\n// import scriptLoader from 'react-async-script-loader';\r\n\r\n// class PaypalButton extends React.Component {\r\n//     constructor(props) {\r\n//       super(props);\r\n//       this.state = {\r\n//         showButton: false,\r\n//       };\r\n//       window.React = React;\r\n//       window.ReactDOM = ReactDOM;\r\n//     }\r\n//     componentDidMount() {\r\n//         const {\r\n//           isScriptLoaded,\r\n//           isScriptLoadSucceed\r\n//         } = this.props;\r\n//         if (isScriptLoaded && isScriptLoadSucceed) {\r\n//           this.setState({ showButton: true });\r\n//         }\r\n//       }\r\n//       componentWillReceiveProps(nextProps) {\r\n//         const {\r\n//           isScriptLoaded,\r\n//           isScriptLoadSucceed,\r\n//         } = nextProps;\r\n//         const isLoadedButWasntLoadedBefore =\r\n//           !this.state.showButton &&\r\n//           !this.props.isScriptLoaded &&\r\n//           isScriptLoaded;\r\n//         if (isLoadedButWasntLoadedBefore) {\r\n//           if (isScriptLoadSucceed) {\r\n//             this.setState({ showButton: true });\r\n//           }\r\n//         }\r\n//       }\r\n//     render() {\r\n//     const {\r\n//         total,\r\n//         currency,\r\n//         env,\r\n//         commit,\r\n//         client,\r\n//         onSuccess,\r\n//         onError,\r\n//         onCancel,\r\n//     } = this.props;\r\n//     const {\r\n//         showButton,\r\n//     } = this.state;\r\n//     const payment = () =>\r\n//       paypal.rest.payment.create(env, client, {\r\n//         transactions: [\r\n//           {\r\n//             amount: {\r\n//               total,\r\n//               currency,\r\n//             }\r\n//           },\r\n//         ],\r\n//       });\r\n//     const onAuthorize = (data, actions) =>\r\n//       actions.payment.execute()\r\n//         .then(() => {\r\n//           const payment = {\r\n//             paid: true,\r\n//             cancelled: false,\r\n//             payerID: data.payerID,\r\n//             paymentID: data.paymentID,\r\n//             paymentToken: data.paymentToken,\r\n//             returnUrl: data.returnUrl,\r\n//           };\r\n//           onSuccess(payment);\r\n//         });\r\n//     return (\r\n//         <div>\r\n//         {showButton && <PaypalButton.react\r\n//             env={env}\r\n//             client={client}\r\n//             commit={commit}\r\n//             payment={payment}\r\n//             onAuthorize={onAuthorize}\r\n//             onCancel={onCancel}\r\n//             onError={onError}\r\n//         />}\r\n//         </div>\r\n//     );\r\n//     }\r\n//   }\r\n//   export default scriptLoader('https://www.paypalobjects.com/api/checkout.js')(PaypalButton);"]},"metadata":{},"sourceType":"module"}